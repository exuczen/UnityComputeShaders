// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

Texture2D<float4> Source;
RWTexture2D<float4> Output;
float tintHeight;
float shade;
float edgeWidth;
float4 tintColor;
float tintStrength;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float4 srcColor = Source[id.xy];
    float4 color;

    if (id.y < (uint)tintHeight)
    {
        float3 grayScaledTintColor = (srcColor.r + srcColor.g + srcColor.b) * 0.33 * tintColor.rgb;
        float3 shadedTintColor = lerp(srcColor.rgb, grayScaledTintColor, tintStrength) * shade;
        float srcAmount = smoothstep(tintHeight - edgeWidth, tintHeight, (float)id.y);
        color = lerp(float4(shadedTintColor, 1), srcColor, srcAmount);
    }
    else
    {
        color = srcColor;
    }
    Output[id.xy] = color;
    
    //float tint = (1 - smoothstep(tintHeight - edgeWidth, tintHeight, (float)id.y)) * tintStrength;
    //float4 shadedTindColor = float4(tintColor.rgb * shade, 1);
    //Output[id.xy] = lerp(srcColor, shadedTindColor, tint);
}
